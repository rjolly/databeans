Changes between 2.0rc17 and 2.1:

+ a mechanism for server side method invocation
+ Collection bulk operations done on server side, for efficiency
+ Collection view classes not persistent
+ shutdown used to fail when security is enabled due to login callbacks not properly unexported : fixed
+ AdminUI close menu item disabled when no open connection
+ connection.create() disallowed in read-only

Changes between 2.0rc16 and 2.0rc17:

+ heap made unsynchronized ; synchronization done at upper level (store)
+ fixed several leaks that showed up with more complex sample
+ heap space exhaust effectively triggers gc
+ admin can abort transactions
+ admin UI adjustments
  + manage users with right click
  + abort transaction with right click
  + transaction isolation level selection
  + memory usage progress bar

Changes between 2.0rc15 and 2.0rc16:

+ improved graphical admin UI, in executable jar file
+ fixed view classes of some persistent collections
+ sample with more data and more elaborate query
+ connection.subject()

Changes between 2.0rc14 and 2.0rc15:

+ graphical admin UI
+ restored 1.4 compatibility
+ a Password class
+ a mechanism to discard unwanted properties in PersistentObjectS
+ client-side security manager to enable class download
+ put back import/export on server
+ RemoteConnection no more Connection inner class

Changes between 2.0rc13 and 2.0rc14:

+ array classes not put in cache

Changes between 1.0 and 2.0rc13:

+ redesigned the transaction mechanism, which was unstable in case of concurrent access (notably to collections) based on atomic actions and method call logging
+ class access permission based security system
+ data beans no more remote objects, which allows collections (for instance) to implement non-remote interfaces
+ synchronization on PersistentObject fixed, now on Accessor (the former are not unique)
+ strengthened concurrency, removed synchronizations where not needed
+ improved the exceptions
+ PersistentClass now extends PersistentObject which allows to emulate static fields
+ PersistentObject constructors replaced by init() methods
+ "Persistent" prefix removed from Collection (and PropertyChangeSupport) classes
+ persistent HashSet, TreeMap, TreeSet, LinkedHashMap, LinkedHashSet
+ import/export on client rather than server side
+ imported the project in netbeans
+ distinct admin port supressed
+ "getting_started" tour entirely based on ant tasks
